// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927ArtifactHashDA81D15F": Object {
      "Description": "Artifact hash for asset \\"04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927\\"",
      "Type": "String",
    },
    "AssetParameters04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927S3Bucket86ACEF8B": Object {
      "Description": "S3 bucket for asset \\"04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927\\"",
      "Type": "String",
    },
    "AssetParameters04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927S3VersionKey59C87B76": Object {
      "Description": "S3 key for asset version \\"04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927\\"",
      "Type": "String",
    },
    "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686ArtifactHashB7ECE5F1": Object {
      "Description": "Artifact hash for asset \\"c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686\\"",
      "Type": "String",
    },
    "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3Bucket821B928E": Object {
      "Description": "S3 bucket for asset \\"c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686\\"",
      "Type": "String",
    },
    "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A": Object {
      "Description": "S3 key for asset version \\"c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3Bucket821B928E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "data7E2128CA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "_p_key",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "_s_key",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "_gsi1_p_key",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "_gsi1_s_key",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "GSI-1",
            "KeySchema": Array [
              Object {
                "AttributeName": "_gsi1_p_key",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "_gsi1_s_key",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "_p_key",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "_s_key",
            "KeyType": "RANGE",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "gameplayCFF713D3": Object {
      "Properties": Object {
        "CorsConfiguration": Object {
          "AllowHeaders": Array [
            "content-type",
            "authorization",
            "x-amz-date",
            "x-api-key",
            "x-amz-security-token",
            "x-amz-user-agent",
          ],
          "AllowMethods": Array [
            "*",
          ],
          "AllowOrigins": Array [
            "*",
          ],
        },
        "Name": "game-play",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "gameplayDefaultStageE4871BAA": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "gameplayGETv1requestsE1DFF4F4": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "gameplayauthorizerB5BCBBEB",
        },
        "RouteKey": "GET /v1/requests",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "gameplayGETv1requestsapirequestintegration8AB6D9A4",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "gameplayGETv1requestsapirequestintegration8AB6D9A4": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "requestsC775BB57",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "gameplayGETv1requestsapirequestintegrationPermission7AAA04F4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "requestsC775BB57",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "gameplayCFF713D3",
              },
              "/*/*/v1/requests",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "gameplayPOSTv1requests744637FD": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "gameplayauthorizerB5BCBBEB",
        },
        "RouteKey": "POST /v1/requests",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "gameplayGETv1requestsapirequestintegration8AB6D9A4",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "gameplayPOSTv1requestsapirequestintegrationPermission76C46491": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "requestsC775BB57",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "gameplayCFF713D3",
              },
              "/*/*/v1/requests",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "gameplayPUTv1requestsrequestId932050D1": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "gameplayauthorizerB5BCBBEB",
        },
        "RouteKey": "PUT /v1/requests/{requestId}",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "gameplayPUTv1requestsrequestIdapirequestintegrationF1852542",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "gameplayPUTv1requestsrequestIdapirequestintegrationF1852542": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "requestsC775BB57",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "gameplayPUTv1requestsrequestIdapirequestintegrationPermission9177BDC7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "requestsC775BB57",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "gameplayCFF713D3",
              },
              "/*/*/v1/requests/{requestId}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "gameplayauthorizerB5BCBBEB": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "gameplayCFF713D3",
        },
        "AuthorizerType": "JWT",
        "IdentitySource": Array [
          "$request.header.Authorization",
        ],
        "JwtConfiguration": Object {
          "Audience": Array [
            Object {
              "Fn::ImportValue": "cognito:ExportsOutputRefuserPoolclient992D31C6EE176468",
            },
          ],
          "Issuer": Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://cognito-idp.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".amazonaws.com/",
                Object {
                  "Fn::ImportValue": "cognito:ExportsOutputRefuserPoolDC9497E0A5AAB3BA",
                },
              ],
            ],
          },
        },
        "Name": "authorizer",
      },
      "Type": "AWS::ApiGatewayV2::Authorizer",
    },
    "generateBatchLambdaRole0660E91E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "generateBatchLambdaRoleDefaultPolicy2B30E671": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "data7E2128CA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "data7E2128CA",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "generateBatchLambdaRoleDefaultPolicy2B30E671",
        "Roles": Array [
          Object {
            "Ref": "generateBatchLambdaRole0660E91E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "requestsC775BB57": Object {
      "DependsOn": Array [
        "generateBatchLambdaRoleDefaultPolicy2B30E671",
        "generateBatchLambdaRole0660E91E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927S3Bucket86ACEF8B",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927S3VersionKey59C87B76",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters04bf825a5ceb5b5f28507cdd99c42b45d8d66699ee3bd380206a156f52d66927S3VersionKey59C87B76",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "REGION": Object {
              "Ref": "AWS::Region",
            },
            "TABLE_NAME": Object {
              "Ref": "data7E2128CA",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "generateBatchLambdaRole0660E91E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "requestsLogRetention6E8BFD33": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "requestsC775BB57",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
  },
}
`;
